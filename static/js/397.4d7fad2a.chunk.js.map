{"version":3,"file":"static/js/397.4d7fad2a.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ContactPhone.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2M8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3m6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1zm3.85-4h1.64L21 16l-1.99 1.99c-1.31-.98-2.28-2.38-2.73-3.99-.18-.64-.28-1.31-.28-2s.1-1.36.28-2c.45-1.62 1.42-3.01 2.73-3.99L21 8l-1.51 2h-1.64c-.22.63-.35 1.3-.35 2s.13 1.37.35 2\"\n}), 'ContactPhone');","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.12\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["createSvgIcon","_jsx","d","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","queue","arguments","length","undefined","add","cancel","delete","process","frameData","_ref","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","wake","keepAlive","immediate","i","_createRenderBatcher","queueMicrotask","microtask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","HandoffComplete","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","_loop","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","transformString","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","_getValueState","_getValueState2","_slicedToArray","velocity","_getValueState3","_getValueState4","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","push","removeItem","index","splice","makeUseVisualState","config","make","_ref$applyWillChange","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","noop","any","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","isTransitionDefined","when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from","elapsed","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","_ref$repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","parseCSSVariable","match","exec","_match","token1","token2","fallback","getVariableValue","depth","_parseCSSVariable","_parseCSSVariable2","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","_toConsumableArray","currentValue","valueAsRead","readValue","scheduleResolve","isColorString","testProp","isNullish","splitColor","aName","bName","cName","_v$match","_v$match2","c","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","_analyseComplexValue","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","_KeyframeResolver","owner","_get","_getPrototypeOf","keyframe","resolveNoneKeyframes","_unresolvedKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","_ref$autoplay","autoplay","_ref$delay","_ref$type","_ref$repeat","_ref$repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","_this$options","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","then","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","findSpring","envelope","derivative","_ref$duration","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","pow","initialGuess","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","_definition","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","interpolate","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","_BaseAnimation","_ref$KeyframeResolver","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","onKeyframesResolved","keyframes$1","mapPercentToKeyframes","mirroredGenerator","_this$options2","_this$options2$type","_this$options2$repeat","_this$options2$repeat2","_this$options2$veloci","generatorFactory","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","_this$options$autopla","play","pause","sample","_this$options3","speed","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isOddIteration","isAnimationFinished","finish","driver","newSpeed","hasChanged","resume","_this$options4","_this$options4$driver","onPlay","tick","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","_this$options2$durati","requiresPregeneratedKeyframes","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","_excluded2","sampleTime","setWithVelocity","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","propName","newValue","cancelAll","attachTimeline","prevProgress","onFrame","observeTimeline","cancelTimeline","getAll","setAll","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","_transition$elapsed","shouldSkip","supports","SubscriptionManager","subscriptions","numSubscriptions","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","setMotionValue","hasValue","addValue","setTarget","_ref$transitionEnd","getOptimisedAppearId","WillChangeMotionValue","_MotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","_ref2$delay","transitionOverride","_targetAndTransition$","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","buildResolvedTypeValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileDrag","whileFocus","AnimationFeature","unmountControls","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","SCALE_MIN","SCALE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","_this$getProps4","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_Component","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","isSVGElement","SVGElement","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetSkewAndRotation","shouldNotifyListeners","HandoffCancelAllAnimations","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","_visualElement","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}